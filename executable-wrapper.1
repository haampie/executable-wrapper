.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.TH executable-wrapper 1 "2023-01-01" Linux "User Manuals"
.SH NAME
executable-wrapper \- modify environment variables before running an executable
.SH SYNOPSIS
.B executable-wrapper 
[
.I --version
]
.I executable

.SH DESCRIPTION
.PP
.B executable-wrapper
is an interpreter for a simple language that modifies environment variables before running an executable. It should be used in the shebang line.

.PP
The language supports the following commands:

.B set
.I variable
.I value
-- this sets
.I variable
to
.I value

.PP
[
.B append
|
.B prepend
]
.I variable
.I delimiter
.I value
-- this appends resp. prepends
.I value
to
.I variable
separated by
.I delimiter

.PP
\fIvariable\fPs, \fIdelimiter\fPs and \fIvalue\fPs are strings. Strings are always raw strings, and there is no escape character.

.PP
Strings be literal (separated by whitespace), quoted with double quotes, or delimited.

.SH EXAMPLES
.PP
The following script stored as
.I executable
will run
.I executable-real
with the
.I PATH
,
.I MY_VAR
and
.I CMAKE_PREFIX_PATH
variables modified.

.PP
    #!/usr/bin/env executable-wrapper

.B
    prepend
.I PATH : /path/to/my/bin
.B 
    set 
.I MY_VAR hello
.B 
    append
.I CMAKE_PREFIX_PATH ; /path/to/package

.PP
The following example shows the different string types:

.PP
    #!/usr/bin/env executable-wrapper

.B
    set
.I EXAMPLE_A \(dqthis has whitespace\(dq
.B
    set
.I EXAMPLE_B \(dqmultiline
    string\(dq
.B
    set
.I EXAMPLE_C r"(string containing \(dq somewhere)"
.B
    set
.I EXAMPLE_D r"{string containing both \(dq and ) somewhere}"
.B
    set
.I EXAMPLE_E r"EOF(string containing )\(dq somewhere)EOF"

.PP

In particular \fIEXAMPLE_C\fP, \fIEXAMPLE_D\fP, and \fIEXAMPLE_E\fP show how to use delimited strings. Supported brackets are \fIr"(...)"\fP, \fIr"{...}"\fP, \fIr"[...]"\fP,\fIr"<...>"\fP.

.SH OPTIONS
.IP "--version"
Print version info
.SH AUTHOR
Harmen Stoppels <me@harmenstoppels.nl>

